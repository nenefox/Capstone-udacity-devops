AWSTemplateFormatVersion: 2010-09-09
Description: >-
  EKS nodes 
  Luis Alejandro Perez Minguez/ Udacity 2020

Parameters:

  EnvironmentName:
    Description: Name of the Environment
    Type: String
    Default: capstone
  

Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
Resources:
  EgressInterCluster:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: >-
        Allow control plane to communicate with worker nodes in group
        standard-workers (kubelet and workload TCP ports)
      DestinationSecurityGroupId: !Ref SG
      FromPort: 1025
      GroupId:
        Fn::ImportValue:
          !Sub '${EnvironmentName}-SecurityGroup'
      IpProtocol: tcp
      ToPort: 65535
  EgressInterClusterAPI:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: >-
        Allow control plane to communicate with worker nodes in group
        standard-workers (workloads using HTTPS port, commonly used with
        extension API servers)
      DestinationSecurityGroupId: !Ref SG
      FromPort: 443
      GroupId: 
        Fn::ImportValue: 
          !Sub '${EnvironmentName}-SecurityGroup'
      IpProtocol: tcp
      ToPort: 443
  IngressInterCluster:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: >-
        Allow worker nodes in group standard-workers to communicate with control
        plane (kubelet and workload TCP ports)
      FromPort: 1025
      GroupId: !Ref SG
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::ImportValue:
          !Sub '${EnvironmentName}-SecurityGroup'
      ToPort: 65535
  IngressInterClusterAPI:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: >-
        Allow worker nodes in group standard-workers to communicate with control
        plane (workloads using HTTPS port, commonly used with extension API
        servers)
      FromPort: 443
      GroupId: !Ref SG
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::ImportValue:
          !Sub '${EnvironmentName}-SecurityGroup'
      ToPort: 443
  IngressInterClusterCP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: >-
        Allow control plane to receive API requests from worker nodes in group
        standard-workers
      FromPort: 443
      GroupId:
        Fn::ImportValue:
          !Sub '${EnvironmentName}-SecurityGroup'
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref SG
      ToPort: 443
  NodeGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: '2'
      LaunchTemplate:
        LaunchTemplateName: !Sub '${AWS::StackName}'
        Version: !GetAtt 
          - NodeGroupLaunchTemplate
          - LatestVersionNumber
      MaxSize: '3'
      MinSize: '1'
      Tags:
        - Key: Name
          PropagateAtLaunch: 'true'
          Value: !Sub '${EnvironmentName}-cluster-standard-workers-Node'
        - Key: !Sub 'kubernetes.io/cluster/${EnvironmentName}-cluster'
          PropagateAtLaunch: 'true'
          Value: owned
      VPCZoneIdentifier: !Split 
        - ','
        - Fn::ImportValue:
            !Sub '${EnvironmentName}-SubnetsPublic'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '0'
  NodeGroupLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              Encrypted: false
              VolumeSize: 80
              VolumeType: gp2
        IamInstanceProfile:
          Arn: !GetAtt 
            - NodeInstanceProfile
            - Arn
        ImageId: ami-0e7c6091d33e3debd
        InstanceType: t2.small
        KeyName: capstone-keyname
        MetadataOptions:
          HttpPutResponseHopLimit: 2
          HttpTokens: optional
        NetworkInterfaces:
          - DeviceIndex: 0
            Groups:
              - Fn::ImportValue:
                  !Sub '${EnvironmentName}-SharedNodeSecurityGroup'
              - !Ref SG
        UserData: >-
          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
      LaunchTemplateName: !Sub '${AWS::StackName}'
  NodeInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref NodeInstanceRole
  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - !FindInMap 
                  - ServicePrincipalPartitionMap
                  - !Ref 'AWS::Partition'
                  - EC2
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy'
      Path: /
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}/NodeInstanceRole'
  SG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Communication between the control plane and worker nodes in group
        standard-workers
      Tags:
        - Key: !Sub 'kubernetes.io/cluster/${EnvironmentName}-cluster'
          Value: owned
        - Key: Name
          Value: !Sub '${AWS::StackName}/SG'
      VpcId:
        Fn::ImportValue:
          !Sub '${EnvironmentName}-VPC'
  SSHIPv4:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      CidrIp: 0.0.0.0/0
      Description: Allow SSH access to worker nodes in group standard-workers
      FromPort: 22
      GroupId: !Ref SG
      IpProtocol: tcp
      ToPort: 22

Outputs:
  FeatureLocalSecurityGroup:
    Value: true
  FeaturePrivateNetworking:
    Value: false
  FeatureSharedSecurityGroup:
    Value: true
  InstanceProfileARN:
    Export:
      Name: !Sub '${AWS::StackName}::InstanceProfileARN'
    Value: !GetAtt 
      - NodeInstanceProfile
      - Arn
  InstanceRoleARN:
    Export:
      Name: !Sub '${AWS::StackName}::InstanceRoleARN'
    Value: !GetAtt 
      - NodeInstanceRole
      - Arn
